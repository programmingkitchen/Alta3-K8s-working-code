
cd ~

groups student


Docker added to the list of groups for student.

student@bchd:~$ groups student
student : student
student@bchd:~$ echo $USER
student
student@bchd:~$ sudo usermod -aG docker $USER
student@bchd:~$ groups student
student : student docker
student@bchd:~$ 



sudo usermod -aG docker $USER

groups student


Normally, you would reboot after adding docker to make these changes stick. 
However, you don't need to reboot in this lab environment. It is constructed this way to save you wait time.



sudo su - $USER

sudo apt install -y golang

Get:3 http://archive.ubuntu.com/ubuntu jammy/main amd64 golang-1.18-go amd64 1.18.1-1ubuntu1 [66.0 MB]
Get:4 http://archive.ubuntu.com/ubuntu jammy/main amd64 golang-1.18 all 1.18.1-1ubuntu1 [11.2 kB]
Get:5 http://archive.ubuntu.com/ubuntu jammy/main amd64 golang-src all 2:1.18~0ubuntu2 [4438 B]
Get:6 http://archive.ubuntu.com/ubuntu jammy/main amd64 golang-go amd64 2:1.18~0ubuntu2 [41.8 kB]
Get:7 http://archive.ubuntu.com/ubuntu jammy/main amd64 golang-doc all 2:1.18~0ubuntu2 [2784 B]
Get:8 http://archive.ubuntu.com/ubuntu jammy/main amd64 golang amd64 2:1.18~0ubuntu2 [2732 B]
Get:9 http://archive.ubuntu.com/ubuntu jammy/main amd64 pkg-config amd64 0.29.2-1ubuntu3 [48.2 kB]
Fetched 82.4 MB in 1s (64.4 MB/s)
Selecting previously unselected package golang-1.18-doc.
(Reading database ... 102491 files and directories currently installed.)
Preparing to unpack .../0-golang-1.18-doc_1.18.1-1ubuntu1_all.deb ...
Unpacking golang-1.18-doc (1.18.1-1ubuntu1) ...
Selecting previously unselected package golang-1.18-src.
Preparing to unpack .../1-golang-1.18-src_1.18.1-1ubuntu1_all.deb ...
Unpacking golang-1.18-src (1.18.1-1ubuntu1) ...
Selecting previously unselected package golang-1.18-go.
Preparing to unpack .../2-golang-1.18-go_1.18.1-1ubuntu1_amd64.deb ...
Unpacking golang-1.18-go (1.18.1-1ubuntu1) ...
Selecting previously unselected package golang-1.18.
Preparing to unpack .../3-golang-1.18_1.18.1-1ubuntu1_all.deb ...
Unpacking golang-1.18 (1.18.1-1ubuntu1) ...
Selecting previously unselected package golang-src.
Preparing to unpack .../4-golang-src_2%3a1.18~0ubuntu2_all.deb ...
Unpacking golang-src (2:1.18~0ubuntu2) ...
Selecting previously unselected package golang-go:amd64.
Preparing to unpack .../5-golang-go_2%3a1.18~0ubuntu2_amd64.deb ...
Unpacking golang-go:amd64 (2:1.18~0ubuntu2) ...
Selecting previously unselected package golang-doc.
Preparing to unpack .../6-golang-doc_2%3a1.18~0ubuntu2_all.deb ...
Unpacking golang-doc (2:1.18~0ubuntu2) ...
Selecting previously unselected package golang:amd64.
Preparing to unpack .../7-golang_2%3a1.18~0ubuntu2_amd64.deb ...
Unpacking golang:amd64 (2:1.18~0ubuntu2) ...
Selecting previously unselected package pkg-config.
Preparing to unpack .../8-pkg-config_0.29.2-1ubuntu3_amd64.deb ...
Unpacking pkg-config (0.29.2-1ubuntu3) ...
Setting up golang-1.18-doc (1.18.1-1ubuntu1) ...
Setting up pkg-config (0.29.2-1ubuntu3) ...
Setting up golang-1.18-src (1.18.1-1ubuntu1) ...
Setting up golang-src (2:1.18~0ubuntu2) ...
Setting up golang-1.18-go (1.18.1-1ubuntu1) ...
Setting up golang-1.18 (1.18.1-1ubuntu1) ...
Setting up golang-go:amd64 (2:1.18~0ubuntu2) ...
Setting up golang-doc (2:1.18~0ubuntu2) ...
Setting up golang:amd64 (2:1.18~0ubuntu2) ...
Processing triggers for man-db (2.10.2-1) ...
Scanning processes...                                                                                                                
Scanning linux images...                                                                                                             

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.


go version

tudent@bchd:~$ go version 
go version go1.18.1 linux/amd64
student@bchd:~$ 



mkdir greeter

cd greeter


Create your hello world program. Cut and paste the ENTIRE code block below into your terminal. 
The 7-line code block runs as a single command. 
The cat >>EOF portion of the command will start reading 
at the second line of the code block, ingesting all the 
lines until encountering an EOF string, which stops 
cat from reading in more content. 

Then the > hello.go portion of the commmand saves the ingested content into a file called hello.go.

This is a great trick.

cat <<EOF > hello.go
package main
import "fmt"
func main() {
    fmt.Println("Hello, World!")
}
EOF


student@bchd:~/greeter$ cat hello.go 
package main
import "fmt"
func main() {
    fmt.Println("Hello, World!")
}



go run hello.go

student@bchd:~/greeter$ go run hello.go
Hello, World!


go mod init greeter
go build
ls
./greeter


student@bchd:~/greeter$ which go
/usr/bin/go
student@bchd:~/greeter$ go run hello.go
Hello, World!
student@bchd:~/greeter$ go mod init greeter
go: creating new go.mod: module greeter
go: to add module requirements and sums:
        go mod tidy
student@bchd:~/greeter$ go build
student@bchd:~/greeter$ ls
go.mod  greeter  hello.go
student@bchd:~/greeter$ ./greeter 
Hello, World!
student@bchd:~/greeter$ 



cd ~

git clone https://github.com/alta3/webby.git


student@bchd:~/greeter$ cd ~
student@bchd:~$ git clone https://github.com/alta3/webby.git
Cloning into 'webby'...
remote: Enumerating objects: 2647, done.
remote: Total 2647 (delta 0), reused 0 (delta 0), pack-reused 2647
Receiving objects: 100% (2647/2647), 154.83 MiB | 35.59 MiB/s, done.
Resolving deltas: 100% (890/890), done.
student@bchd:~$ pwd
/home/student
student@bchd:~$ ls -l
total 28
drwxrwxr-x 4 student student 4096 Jul  7 15:06 git
drwxrwxr-x 3 student student 4096 Jul 10 15:39 go
drwxrwxr-x 2 student student 4096 Jul 10 15:40 greeter
drwxr-xr-x 5 student student 4096 Jul  8 15:11 my-repos
drwxr-xr-x 2 student root    4096 Jul  7 15:07 mycode
drwxr-xr-x 2 student root    4096 Jul  7 15:04 static
drwxrwxr-x 4 student student 4096 Jul 10 15:41 webby
student@bchd:~$ 




cd ~/webby
export GO111MODULE="on"
go get -u github.com/stripe/stripe-go/v72
go get .

student@bchd:~$ cd ~/webby/
student@bchd:~/webby$ ls
README.md  deploy  webpage.go
student@bchd:~/webby$ export GO111MODULE="on"
student@bchd:~/webby$ go mod init webby
go: creating new go.mod: module webby
go: to add module requirements and sums:
        go mod tidy
student@bchd:~/webby$ go get -u github.com/stripe/stripe-go/v72
go: downloading github.com/stripe/stripe-go/v72 v72.118.0
go: downloading github.com/stripe/stripe-go v70.15.0+incompatible
go: added github.com/stripe/stripe-go/v72 v72.118.0
student@bchd:~/webby$ go get .
go: added github.com/stripe/stripe-go v70.15.0+incompatible
student@bchd:~/webby$ 

Here is the moment you have been waiting for! You will create a binary 
that will run autonomously inside a docker container. 

This tiny extra step is the difference between creating a 1GB 
container loaded with garbage and future security theats vs. 
a 100 MB sterile container that just works. 
This is why we are using go for this lab! Let's compile webby. 
It will take about a minute.



CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o webserver .








                       +------------>
           Load your files into a scratch container
              +---------------------------------+
              |                                 |
              |                                 |
+-------------+--------------+       +----------v---------+
| All the "webby" files in:  |       |                    |
| ~/go/src/github.com/webby/*|       | Scratch Container  |
|                            |       |                    |
+----------------------------+       +--------------------+
   Your working web server!            A scratch container
                                      is empty (zero bytes!)


cp ~/mycode/config/Dockerfile .



student@bchd:~/webby$ cp ~/mycode/config/Dockerfile .
student@bchd:~/webby$ ls -l
total 9732
-rw-rw-r-- 1 student student     223 Jul 10 15:53 Dockerfile
-rw-rw-r-- 1 student student    2094 Jul 10 15:41 README.md
drwxrwxr-x 6 student student    4096 Jul 10 15:41 deploy
-rw-rw-r-- 1 student student     144 Jul 10 15:42 go.mod
-rw-rw-r-- 1 student student    1446 Jul 10 15:42 go.sum
-rw-rw-r-- 1 student student    8502 Jul 10 15:41 webpage.go
-rwxrwxr-x 1 student student 9930189 Jul 10 15:46 webserver
student@bchd:~/webby$ 





batcat Dockerfile

========================================
#filename
FROM scratch

#name of the binary (image)
ADD webserver /

#add a directory
ADD deploy /deploy/

#there can only be one CMD in a Dockerfile
CMD ["/webserver"]

# port that the container will listen on
EXPOSE 8888
========================================

sudo docker build -t webby -f Dockerfile .


Sending build context to Docker daemon    258MB
Step 1/5 : FROM scratch
 ---> 
Step 2/5 : ADD webserver /
 ---> ae076e08a34d
Step 3/5 : ADD deploy /deploy/
 ---> 01d62e9ad503
Step 4/5 : CMD ["/webserver"]
 ---> Running in 7a6080a0d6b2
Removing intermediate container 7a6080a0d6b2
 ---> 56e14f7fc894
Step 5/5 : EXPOSE 8888
 ---> Running in 339d6179f2e0
Removing intermediate container 339d6179f2e0
 ---> 03e6b74d7c12
Successfully built 03e6b74d7c12
Successfully tagged webby:latest



student@bchd:~/webby$ sudo docker image ls
REPOSITORY   TAG       IMAGE ID   CREATED   SIZE
student@bchd:~/webby$ sudo docker ls
docker: 'ls' is not a docker command.
See 'docker --help'
student@bchd:~/webby$ sudo docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
student@bchd:~/webby$ sudo docker container ls
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
student@bchd:~/webby$ sudo docker build -t webby -f Dockerfile .
Sending build context to Docker daemon    258MB
Step 1/5 : FROM scratch
 ---> 
Step 2/5 : ADD webserver /
 ---> b02fdf390d7f
Step 3/5 : ADD deploy /deploy/
 ---> 8fcb9a12414f
Step 4/5 : CMD ["/webserver"]
 ---> Running in c7a8f15b5f93
Removing intermediate container c7a8f15b5f93
 ---> e1f9a12ee28e
Step 5/5 : EXPOSE 8888
 ---> Running in 3f7943d5e52d
Removing intermediate container 3f7943d5e52d
 ---> 5c14412b7f0a
Successfully built 5c14412b7f0a
Successfully tagged webby:latest
student@bchd:~/webby$ 


student@bchd:~/webby$ docker image ls
REPOSITORY   TAG       IMAGE ID       CREATED          SIZE
webby        latest    5c14412b7f0a   38 seconds ago   93.5MB
student@bchd:~/webby$ docker container ls
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
student@bchd:~/webby$ 





                                     Run the scratch container
                                             locally
+----------------------------+       +--------------------+
| All the "webby" files in:  |       |                    |
| ~/go/src/github.com/webby/*|       | Scratch Container  |
|                            |       |                    |
+----------------------------+       +--------------------+
   Your working web server!          http://172.16.1.4:8888/
                                                ^
                                                |
                                                +
                                             TESTING



sudo docker run -p 2224:8888 --name mywebby -d webby



student@bchd:~/webby$ sudo docker run -p 2224:8888 --name mywebby -d webby
9d390388373f93b64f7889d07d826a5ba0188eb58b8fe83135a7e97d310c0a71
student@bchd:~/webby$ docker image ls
REPOSITORY   TAG       IMAGE ID       CREATED         SIZE
webby        latest    5c14412b7f0a   2 minutes ago   93.5MB
student@bchd:~/webby$ docker container ls
CONTAINER ID   IMAGE     COMMAND        CREATED          STATUS          PORTS                                       NAMES
9d390388373f   webby     "/webserver"   13 seconds ago   Up 11 seconds   0.0.0.0:2224->8888/tcp, :::2224->8888/tcp   mywebby
student@bchd:~/webby$ 





cd ~
curl localhost:2224


From Notes
sudo docker ps -a
CONTAINER ID    IMAGE     COMMAND         CREATED              STATUS              PORTS                    NAMES
b63ccb7ee966    webby     "/webserver"    About a minute ago   Up About a minute   0.0.0.0:2224->8888/tcp   mywebby

sudo docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
webby               latest              cadec56e4f74        2 minutes ago         93.2 MB



My Actual results

student@bchd:~$ sudo docker ps -a
CONTAINER ID   IMAGE     COMMAND        CREATED         STATUS         PORTS                                       NAMES
9d390388373f   webby     "/webserver"   4 minutes ago   Up 4 minutes   0.0.0.0:2224->8888/tcp, :::2224->8888/tcp   mywebby
student@bchd:~$ sudo docker images
REPOSITORY   TAG       IMAGE ID       CREATED         SIZE
webby        latest    5c14412b7f0a   6 minutes ago   93.5MB




docker --version


student@bchd:~$ docker --version
Docker version 20.10.12, build 20.10.12-0ubuntu4
student@bchd:~$ 



                           +------------>
   Upload your container to a registry that K8s trusts
                        +---------------------+
                        |                     |
+----------+   +--------+----------+   +------v-------+
|  Local   |   | Scratch Container |   | bchd.registry|
|  Webby   |   |  With Webby Files |   |   Registry   |
|  Files   |   |      Loaded       |   |              |
+----------+   +-------------------+   +--------------+




sudo docker run -d -p 2345:5000 registry:2

student@bchd:~$ sudo docker run -d -p 2345:5000 registry:2
Unable to find image 'registry:2' locally
2: Pulling from library/registry
2408cc74d12b: Pull complete 
ea60b727a1ce: Pull complete 
c87369050336: Pull complete 
e69d20d3dd20: Pull complete 
fc30d7061437: Pull complete 
Digest: sha256:bedef0f1d248508fe0a16d2cacea1d2e68e899b2220e2258f1b604e1f327d475
Status: Downloaded newer image for registry:2
48793d233a80ce5d468e7c022f92c36b392a6b3692ccbc0cb78fe433b30eb6d0
student@bchd:~$ 


We get a new image and a container that is running the registry
 

student@bchd:~$ docker image ls
REPOSITORY   TAG       IMAGE ID       CREATED       SIZE
webby        latest    5c14412b7f0a   4 hours ago   93.5MB
registry     2         773dbf02e42e   6 weeks ago   24.1MB
student@bchd:~$ docker container ls
CONTAINER ID   IMAGE        COMMAND                  CREATED          STATUS          PORTS                                       NAMES
48793d233a80   registry:2   "/entrypoint.sh /etc…"   30 seconds ago   Up 29 seconds   0.0.0.0:2345->5000/tcp, :::2345->5000/tcp   relaxed_chatterjee
9d390388373f   webby        "/webserver"             4 hours ago      Up 4 hours      0.0.0.0:2224->8888/tcp, :::2224->8888/tcp   mywebby



This adds bchd.registry to the right of localhost on the first line. If already there, it will NOT add it again.

sudo sed -i '/127.0.0.1/!b;/bchd.registry/!s/$/ bchd.registry/' /etc/hosts

Real example
student@bchd:~$ sudo diff /etc/hosts /etc/hosts.orig
1c1
< 127.0.0.1 localhost bchd.registry
---
> 127.0.0.1 localhost
student@bchd:~$ cat /etc/hosts
127.0.0.1 localhost bchd.registry

# The following lines are desirable for IPv6 capable hosts
::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts
student@bchd:~$ 


Example from the lab

127.0.0.1 localhost bchd.registry

# The following lines are desirable for IPv6 capable hosts
::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhost


sudo cp ~/mycode/config/bchd.registry /etc/nginx/sites-enabled/reg && batcat ~/mycode/config/bchd.registry && batcat /etc/nginx/sites-enabled/reg

Before
student@bchd:/etc/nginx/sites-enabled$ ls
default

After
student@bchd:/etc/nginx/sites-enabled$ ls -l
total 8
-rw-r--r-- 1 root root 231 Jul  7 15:04 default
-rw-r--r-- 1 root root 142 Jul 10 20:20 reg
student@bchd:/etc/nginx/sites-enabled$ cat reg
server {
    listen bchd.registry;
    client_max_body_size 100M;

    location / {
        proxy_pass http://127.0.0.1:2345;
        }
    }



server {
    listen bchd.registry;
    client_max_body_size 100M;

    location / {
        proxy_pass http://127.0.0.1:2345;
        }
    }

sudo nginx -s reload

Tag your new image with the FQDN of bchd.registry. 
This will make the push of your image go directly to your registry that is hosted on bchd.registry.

sudo docker tag webby bchd.registry/webby


student@bchd:~$ docker image ls
REPOSITORY   TAG       IMAGE ID       CREATED       SIZE
webby        latest    5c14412b7f0a   4 hours ago   93.5MB
registry     2         773dbf02e42e   6 weeks ago   24.1MB

student@bchd:~$ sudo docker tag webby bchd.registry/webby

student@bchd:~$ docker image ls
REPOSITORY            TAG       IMAGE ID       CREATED       SIZE
bchd.registry/webby   latest    5c14412b7f0a   4 hours ago   93.5MB
webby                 latest    5c14412b7f0a   4 hours ago   93.5MB
registry              2         773dbf02e42e   6 weeks ago   24.1MB
student@bchd:~$ 

No changes to container with tag. 
student@bchd:~$ docker container ls
CONTAINER ID   IMAGE        COMMAND                  CREATED          STATUS          PORTS                                       NAMES
48793d233a80   registry:2   "/entrypoint.sh /etc…"   10 minutes ago   Up 10 minutes   0.0.0.0:2345->5000/tcp, :::2345->5000/tcp   relaxed_chatterjee
9d390388373f   webby        "/webserver"             4 hours ago      Up 4 hours      0.0.0.0:2224->8888/tcp, :::2224->8888/tcp   mywebby

student@bchd:~$ docker container ls
CONTAINER ID   IMAGE        COMMAND                  CREATED          STATUS          PORTS                                       NAMES
48793d233a80   registry:2   "/entrypoint.sh /etc…"   11 minutes ago   Up 11 minutes   0.0.0.0:2345->5000/tcp, :::2345->5000/tcp   relaxed_chatterjee
9d390388373f   webby        "/webserver"             4 hours ago      Up 4 hours      0.0.0.0:2224->8888/tcp, :::2224->8888/tcp   mywebby



sudo docker push bchd.registry/webby


My real output
student@bchd:~$ sudo docker push bchd.registry/webby
Using default tag: latest
The push refers to repository [bchd.registry/webby]
e5ab2708b1e3: Pushed 
efd5d6bf84f4: Pushed 
latest: digest: sha256:5a1005b8eb13cb89d8a11293bc7c042af0b4c69f39c12e9439e896f9efa37940 size: 740
student@bchd:~$ 




Lab doc
The push refers to repository [bchd.registry/webby]
a58c1cd5ebb3: Pushed
feec4fa54ecc: Pushed
latest: digest: sha256:70b7f523e5e160758811c6c306ab385f604ba5119f9c99cb6429cdb786522c80 size: 740


sudo docker image ls


student@bchd:~$ docker image ls
REPOSITORY            TAG       IMAGE ID       CREATED       SIZE
bchd.registry/webby   latest    5c14412b7f0a   4 hours ago   93.5MB
webby                 latest    5c14412b7f0a   4 hours ago   93.5MB
registry              2         773dbf02e42e   6 weeks ago   24.1MB



REPOSITORY                     TAG       IMAGE ID       CREATED         SIZE
webby                          latest    9360b4b7f426   9 minutes ago   94MB
bchd.registry/webby            latest    9360b4b7f426   9 minutes ago   94MB
registry                       2         b8604a3fe854   2 days ago      26.2MB

sudo docker stop mywebby


student@bchd:~$ docker container ls
CONTAINER ID   IMAGE        COMMAND                  CREATED          STATUS          PORTS                                       NAMES
48793d233a80   registry:2   "/entrypoint.sh /etc…"   14 minutes ago   Up 14 minutes   0.0.0.0:2345->5000/tcp, :::2345->5000/tcp   relaxed_chatterjee
9d390388373f   webby        "/webserver"             4 hours ago      Up 4 hours      0.0.0.0:2224->8888/tcp, :::2224->8888/tcp   mywebby


student@bchd:~$ sudo docker stop mywebby 
mywebby
student@bchd:~$ docker container ls
CONTAINER ID   IMAGE        COMMAND                  CREATED          STATUS          PORTS                                       NAMES
48793d233a80   registry:2   "/entrypoint.sh /etc…"   14 minutes ago   Up 14 minutes   0.0.0.0:2345->5000/tcp, :::2345->5000/tcp   relaxed_chatterjee
student@bchd:~$ 





CHALLENGE

cd ~/go/src/github.com/alta3/hello
CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o welcome .

CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o welcome .

./welcome

vim scratch

#filename
FROM scratch

#name of the binary (image)
ADD welcome /

#there can only be one CMD in a dockerfile
CMD ["/welcome"]


sudo docker build -t welcome -f scratch .

sudo docker run -it welcome


Challenge 02

cd ~/go/src/github.com/webby

vim scratch

========================================
#filename
FROM scratch

#name of the binary (image)
ADD webserver /

#add a directory
ADD deploy /deploy/

#there can only be one CMD in a dockerfile
CMD ["/webserver"]

# port that the container will listen on
EXPOSE 8385
========================================

CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o webserver .
sudo docker build -t webby:1.1 -f scratch .
sudo docker run -p 2224:8385 -it webby:1.1

